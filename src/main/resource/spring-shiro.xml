<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:property-placeholder location="classpath:shiro.properties" ignore-unresolvable="true"/>
    <!--注册自定义reaml-->
    <bean id="bosRealm" class="com.zyc.realm.BOSrealm" >
        <!--cas服务器地址-->
        <property name="casServerUrlPrefix" value="${cas_service}" >
        </property>
        <!--回调地址-->
        <property name="casService" value="${cas_client}/Houtai" />

        <property name="cachingEnabled" value="true" />
        <property name="authenticationCachingEnabled" value="true" />
        <property name="authenticationCacheName" value="authenticationCache" />
        <property name="authorizationCachingEnabled" value="true" />
        <property name="authorizationCacheName" value="authorizationCache" />

    </bean>

    <!--注册安全管理器-->

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--注入自定义realm-->
        <property name="realm" ref="bosRealm"/>
        <property name="subjectFactory" ref="casSubjectFactory" />
        <property name="cacheManager" ref="shiroEhcacheManager"/>
    </bean>

    <bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory" />

    <!--配置shiroFIlter start-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--cas登陆连接-->
        <property name="loginUrl" value="${cas_service}/login?service=${cas_client}/Houtai"/>
        <!--注入安全管理器-->
        <property name="securityManager" ref="securityManager"/>
        <!--        $lt;!$ndash;注入系统登录页面$ndash;$gt;
                <property name="loginUrl" value="/user/logIn.jsp"/>-->
        <!--        注入成功页面-->
        <property name="successUrl" value="/Houtai/index.jsp"/>
        <!--注入权限不足页面-->
        <property name="unauthorizedUrl" value="/error/web/roleerror.jsp"/>
        <!--url拦截规则-->

        <property name="filterChainDefinitions">
            <value>
                <!--/Houtai/** = roles[administrator]-->
                /Houtai = casFilter
                /user/logout.do = logout
                /Houtai/** = perms[author:author]
                /assets/** =anon
                /css/** = anon
                /dist/** = anon
                /imgs/** = anon
                /js/** = anon
                /user/** = anon
                /wenzhang/** = anon
            </value>
        </property>

        <property name="filters">
            <map>
                <!-- 添加casFilter到shiroFilter -->
                <entry key="casFilter" value-ref="casFilter" />
                <entry key="logout" value-ref="logout" />
            </map>
        </property>

    </bean>

    <bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
        <!-- 配置验证错误时的失败页面 ，这里配置为登录页面 -->
        <property name="failureUrl" value="${cas_service}/login?service=${cas_client}/Houtai" />
    </bean>
    <!-- 退出登录过滤器 -->
    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="${cas_service}/logout?service=${cas_client}"/>
    </bean>
    <!--配置shiroFIlter end-->

    <!--开启shiro注解 start-->
    <bean id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
        <!--强制使用cglib创建action的代理对象-->
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <!--开启shiro注解 end-->

    <!-- 缓存管理器 使用Ehcache实现 -->
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <!--classpath是缓存属性的配置文件  -->
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
    </bean>
</beans>
