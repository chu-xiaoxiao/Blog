<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zyc.mapper.IPMapper" >
  <resultMap id="BaseResultMap" type="com.zyc.model.IP" >
    <id column="ipid" property="ipid" jdbcType="INTEGER" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap type="com.zyc.model.Ip_Date" id="Ip_Date" autoMapping="true">
  	<result column="days" property="date"  jdbcType="TIMESTAMP"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ipid, ip, location, date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zyc.model.IPExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from IP
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from IP
    where ipid = #{ipid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from IP
    where ipid = #{ipid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyc.model.IPExample" >
    delete from IP
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyc.model.IP" >
    insert into IP (ipid, ip, location
     )
    values (#{ipid,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zyc.model.IP" >
    insert into IP
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ipid != null" >
        ipid,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="date != null" >
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ipid != null" >
        #{ipid,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyc.model.IPExample" resultType="java.lang.Integer" >
    select count(*) from IP
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update IP
    <set >
      <if test="record.ipid != null" >
        ipid = #{record.ipid,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update IP
    set ipid = #{record.ipid,jdbcType=INTEGER},
      ip = #{record.ip,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyc.model.IP" >
    update IP
    <set >
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ipid = #{ipid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyc.model.IP" >
    update IP
    set ip = #{ip,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP}
    where ipid = #{ipid,jdbcType=INTEGER}
  </update>
  <select id="selectCountByDay" parameterType="Integer" resultMap="Ip_Date">
  	SELECT DATE_FORMAT(date,'%Y-%m-%d') days,COUNT(IP) count FROM IP GROUP BY days ORDER BY days desc LIMIT #{count};
  </select>
</mapper>